 Simulated Accelerometer (SimulatedQMI8658 Class):
Code:
 // Simulated Accelerometer and Gyroscope Data Class
 struct IMUdata {
    float x, y, z;
 };
 class SimulatedQMI8658 {
 private:
    bool motionDetected;
    void (*wakeupCallback)();
 public:
    SimulatedQMI8658() : motionDetected(false), wakeupCallback(nullptr) {}
    bool begin() {
        // Simulate sensor initialization
        Serial.println("Simulated Sensor Initialized.");
        return true;
    }
    bool readFromFifo(IMUdata* acc, int accCount, IMUdata* gyr, int gyrCount) {
        // Simulate accelerometer and gyroscope data
        for (int i = 0; i < accCount; i++) {
            acc[i].x = random(-32768, 32767) / 1000.0;
            acc[i].y = random(-32768, 32767) / 1000.0;
            acc[i].z = random(-32768, 32767) / 1000.0;
        }
        for (int i = 0; i < gyrCount; i++) {
            gyr[i].x = random(-32768, 32767) / 100.0;
            gyr[i].y = random(-32768, 32767) / 100.0;
            gyr[i].z = random(-32768, 32767) / 100.0;
        }
        return true;
    }
    void configWakeOnMotion() {
        // Simulate wake-on-motion configuration
    }
    void setWakeupMotionEventCallBack(void (*callback)()) {
        wakeupCallback = callback;
    }
    void simulateMotion() {
        if (random(100) < 5 && !motionDetected) { // 5% chance of motion detection
            motionDetected = true;
            if (wakeupCallback) {
                wakeupCallback(); // Trigger the callback when motion is detected
            }
        } else {
            motionDetected = false;
        }
    }
 };
