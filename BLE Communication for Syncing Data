 Code:

 #include <BLEDevice.h>
 #include <BLEUtils.h>
#include <BLEServer.h>
 BLECharacteristic *pCharacteristic;
 class MyServerCallbacks: public BLEServerCallbacks {
    void onConnect(BLEServer* pServer) {
        Serial.println("Device connected");
    }
    void onDisconnect(BLEServer* pServer) {
        Serial.println("Device disconnected");
    }
 };
 void setupBLE() {
    BLEDevice::init("Dog Activity Tracker");
    BLEServer *pServer = BLEDevice::createServer();
    pServer->setCallbacks(new MyServerCallbacks());
    BLEService *pService = pServer->createService(SERVICE_UUID);
    pCharacteristic = pService->createCharacteristic(
        CHARACTERISTIC_UUID,
        BLECharacteristic::PROPERTY_READ |
        BLECharacteristic::PROPERTY_WRITE
    );
    pService->start();
    BLEAdvertising *pAdvertising = pServer->getAdvertising();
    pAdvertising->start();
    Serial.println("Waiting for a client to connect...");
 }
void loop() {
    // BLE communication logic for sending data
 }
